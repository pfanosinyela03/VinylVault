// Generated by view binder compiler. Do not edit!
package com.example.vinylvault_complete.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.vinylvault_complete.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVinylDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addVinylButton;

  @NonNull
  public final Button categoryButton;

  @NonNull
  public final Button deleteVinylButton;

  @NonNull
  public final TextView selectedCategoryTextView;

  @NonNull
  public final LinearLayout setGoalButton;

  @NonNull
  public final LinearLayout vinylLayout;

  private ActivityVinylDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull Button addVinylButton, @NonNull Button categoryButton,
      @NonNull Button deleteVinylButton, @NonNull TextView selectedCategoryTextView,
      @NonNull LinearLayout setGoalButton, @NonNull LinearLayout vinylLayout) {
    this.rootView = rootView;
    this.addVinylButton = addVinylButton;
    this.categoryButton = categoryButton;
    this.deleteVinylButton = deleteVinylButton;
    this.selectedCategoryTextView = selectedCategoryTextView;
    this.setGoalButton = setGoalButton;
    this.vinylLayout = vinylLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVinylDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVinylDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_vinyl_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVinylDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addVinylButton;
      Button addVinylButton = ViewBindings.findChildViewById(rootView, id);
      if (addVinylButton == null) {
        break missingId;
      }

      id = R.id.categoryButton;
      Button categoryButton = ViewBindings.findChildViewById(rootView, id);
      if (categoryButton == null) {
        break missingId;
      }

      id = R.id.deleteVinylButton;
      Button deleteVinylButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteVinylButton == null) {
        break missingId;
      }

      id = R.id.selectedCategoryTextView;
      TextView selectedCategoryTextView = ViewBindings.findChildViewById(rootView, id);
      if (selectedCategoryTextView == null) {
        break missingId;
      }

      LinearLayout setGoalButton = (LinearLayout) rootView;

      id = R.id.vinylLayout;
      LinearLayout vinylLayout = ViewBindings.findChildViewById(rootView, id);
      if (vinylLayout == null) {
        break missingId;
      }

      return new ActivityVinylDetailsBinding((LinearLayout) rootView, addVinylButton,
          categoryButton, deleteVinylButton, selectedCategoryTextView, setGoalButton, vinylLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
